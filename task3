#处理缺失数据
string_data = pd.Series(['aardvark','artichoke',np.nan])
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'pd' is not defined
import pandas as pd
import numpy as np
string_data = pd.Series(['aardvark','artichoke',np.nan,'avpcadp'])
string_data
0     aardvark
1    artichoke
2          NaN
3      avpcadp
dtype: object
string_data.isnull()
0    False
1    False
2     True
3    False
dtype: bool
string_data[0] = None
#过滤缺失数据
from numpy import nan as NA
data = pd.Series([1,Na],3.5,NA,7)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'Na' is not defined
data = pd.Series([1,NA],3.5,NA,7)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\series.py", line 169, in __init__
    index = ensure_index(index)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 5378, in ensure_index
    return Index(index_like)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 468, in __new__
    cls._scalar_data_error(data)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 3799, in _scalar_data_error
    repr(data)))
TypeError: Index(...) must be called with a collection of some kind, 3.5 was passed
data = pd.Series([1,NA],3.5,NA,7)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\series.py", line 169, in __init__
    index = ensure_index(index)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 5378, in ensure_index
    return Index(index_like)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 468, in __new__
    cls._scalar_data_error(data)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 3799, in _scalar_data_error
    repr(data)))
TypeError: Index(...) must be called with a collection of some kind, 3.5 was passed
data = pd.Series([1,NA,3.5,NA,7])
data
0    1.0
1    NaN
2    3.5
3    NaN
4    7.0
dtype: float64
data.dropna()
0    1.0
2    3.5
4    7.0
dtype: float64
#等价于
data[data.notnull()]
0    1.0
2    3.5
4    7.0
dtype: float64
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],)
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3])
Traceback (most recent call last):
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2011, in pandas_dtype
    npdtype = np.dtype(dtype)
TypeError: data type not understood
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 383, in __init__
    dtype = self._validate_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 182, in _validate_dtype
    dtype = pandas_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2015, in pandas_dtype
    raise TypeError("data type not understood")
TypeError: data type not understood
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.])
Traceback (most recent call last):
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2011, in pandas_dtype
    npdtype = np.dtype(dtype)
TypeError: data type not understood
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 383, in __init__
    dtype = self._validate_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 182, in _validate_dtype
    dtype = pandas_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2015, in pandas_dtype
    raise TypeError("data type not understood")
TypeError: data type not understood
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.])
Traceback (most recent call last):
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2011, in pandas_dtype
    npdtype = np.dtype(dtype)
TypeError: data type not understood
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 383, in __init__
    dtype = self._validate_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 182, in _validate_dtype
    dtype = pandas_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2015, in pandas_dtype
    raise TypeError("data type not understood")
TypeError: data type not understood
import pandas as pd
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.])
Traceback (most recent call last):
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2011, in pandas_dtype
    npdtype = np.dtype(dtype)
TypeError: data type not understood
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 383, in __init__
    dtype = self._validate_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 182, in _validate_dtype
    dtype = pandas_dtype(dtype)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\dtypes\common.py", line 2015, in pandas_dtype
    raise TypeError("data type not understood")
TypeError: data type not understood
data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.]])
  File "<input>", line 1
    data = pd.DataFrame([1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.]])
                                                                     ^
SyntaxError: invalid syntax
data = pd.DataFrame([[1.,6.5,3.],[1.,NA,NA],[NA,NA,NA],[NA,6.5,3.]])
data
     0    1    2
0  1.0  6.5  3.0
1  1.0  NaN  NaN
2  NaN  NaN  NaN
3  NaN  6.5  3.0
cleaned
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'cleaned' is not defined
cleaned = data.dropna()
cleaned
     0    1    2
0  1.0  6.5  3.0
data
     0    1    2
0  1.0  6.5  3.0
1  1.0  NaN  NaN
2  NaN  NaN  NaN
3  NaN  6.5  3.0
data[4] = NA
data
     0    1    2   4
0  1.0  6.5  3.0 NaN
1  1.0  NaN  NaN NaN
2  NaN  NaN  NaN NaN
3  NaN  6.5  3.0 NaN
data[:,4] = na
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'na' is not defined
data[:,4] = NA
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 3370, in __setitem__
    self._set_item(key, value)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 3445, in _set_item
    value = self._sanitize_column(key, value)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 3661, in _sanitize_column
    if broadcast and key in self.columns and value.ndim == 1:
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\numeric.py", line 176, in __contains__
    hash(key)
TypeError: unhashable type: 'slice'
data.dropna(axis = 1,how='all')
     0    1    2
0  1.0  6.5  3.0
1  1.0  NaN  NaN
2  NaN  NaN  NaN
3  NaN  6.5  3.0
data
     0    1    2   4
0  1.0  6.5  3.0 NaN
1  1.0  NaN  NaN NaN
2  NaN  NaN  NaN NaN
3  NaN  6.5  3.0 NaN
df = pd.DataFrame(np.random.randn(7,3))
df
          0         1         2
0  0.800555  0.524744  0.175188
1 -1.479989 -0.062902  0.428002
2 -0.014324  1.217442 -1.315863
3  0.660648  0.114060  0.207032
4  0.701661  1.446040 -0.308940
5 -0.268470  2.650228 -0.333350
6  1.846470 -1.060149 -0.435460
df.dropna()
          0         1         2
0  0.800555  0.524744  0.175188
1 -1.479989 -0.062902  0.428002
2 -0.014324  1.217442 -1.315863
3  0.660648  0.114060  0.207032
4  0.701661  1.446040 -0.308940
5 -0.268470  2.650228 -0.333350
6  1.846470 -1.060149 -0.435460
df.iloc[:4.1] = NA
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexing.py", line 189, in __setitem__
    indexer = self._get_setitem_indexer(key)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexing.py", line 175, in _get_setitem_indexer
    return self._convert_to_indexer(key, is_setter=True)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexing.py", line 2241, in _convert_to_indexer
    return self._convert_slice_indexer(obj, axis)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexing.py", line 267, in _convert_slice_indexer
    return ax._convert_slice_indexer(key, kind=self.name)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 2908, in _convert_slice_indexer
    self._validate_indexer('slice', key.stop, kind),
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 4710, in _validate_indexer
    self._invalid_indexer(form, key)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\indexes\base.py", line 3067, in _invalid_indexer
    kind=type(key)))
TypeError: cannot do slice indexing on <class 'pandas.core.indexes.range.RangeIndex'> with these indexers [4.1] of <class 'float'>
df.iloc[:4,1] = NA
df.iloc[:2,2] = NA
df
          0         1         2
0  0.800555       NaN       NaN
1 -1.479989       NaN       NaN
2 -0.014324       NaN -1.315863
3  0.660648       NaN  0.207032
4  0.701661  1.446040 -0.308940
5 -0.268470  2.650228 -0.333350
6  1.846470 -1.060149 -0.435460
df.dropna()
          0         1        2
4  0.701661  1.446040 -0.30894
5 -0.268470  2.650228 -0.33335
6  1.846470 -1.060149 -0.43546
df
          0         1         2
0  0.800555       NaN       NaN
1 -1.479989       NaN       NaN
2 -0.014324       NaN -1.315863
3  0.660648       NaN  0.207032
4  0.701661  1.446040 -0.308940
5 -0.268470  2.650228 -0.333350
6  1.846470 -1.060149 -0.435460
df.dropna(thresh = 2)
          0         1         2
2 -0.014324       NaN -1.315863
3  0.660648       NaN  0.207032
4  0.701661  1.446040 -0.308940
5 -0.268470  2.650228 -0.333350
6  1.846470 -1.060149 -0.435460
df.fillna(0)
          0         1         2
0  0.190925  0.000000  0.000000
1 -1.483239  0.000000  0.000000
2 -0.734257  0.000000 -1.316728
3  0.733022  0.000000  0.288274
4 -0.998421  0.473044 -1.308965
5 -1.247776 -0.883013 -0.396834
6 -1.928312 -0.146379  0.417426
df.fillna({1:0.5,2:0})
          0         1         2
0  0.190925  0.500000  0.000000
1 -1.483239  0.500000  0.000000
2 -0.734257  0.500000 -1.316728
3  0.733022  0.500000  0.288274
4 -0.998421  0.473044 -1.308965
5 -1.247776 -0.883013 -0.396834
6 -1.928312 -0.146379  0.417426
_ = df.fillna(0,inplace = True)
_
_
_
df
          0         1         2
0  0.190925  0.000000  0.000000
1 -1.483239  0.000000  0.000000
2 -0.734257  0.000000 -1.316728
3  0.733022  0.000000  0.288274
4 -0.998421  0.473044 -1.308965
5 -1.247776 -0.883013 -0.396834
6 -1.928312 -0.146379  0.417426
_
df
          0         1         2
0  0.190925  0.000000  0.000000
1 -1.483239  0.000000  0.000000
2 -0.734257  0.000000 -1.316728
3  0.733022  0.000000  0.288274
4 -0.998421  0.473044 -1.308965
5 -1.247776 -0.883013 -0.396834
6 -1.928312 -0.146379  0.417426
df.iloc[4:,2] = NA
df
          0         1         2
0  0.196809 -0.964836  1.642764
1 -0.331314  0.386139 -0.151829
2  1.686662       NaN  1.083637
3 -1.096672       NaN -1.022012
4  0.771515       NaN       NaN
5  0.092411       NaN       NaN
df.fillna(method = 'ffill')
          0         1         2
0  0.196809 -0.964836  1.642764
1 -0.331314  0.386139 -0.151829
2  1.686662  0.386139  1.083637
3 -1.096672  0.386139 -1.022012
4  0.771515  0.386139 -1.022012
5  0.092411  0.386139 -1.022012
df
          0         1         2
0  0.196809 -0.964836  1.642764
1 -0.331314  0.386139 -0.151829
2  1.686662       NaN  1.083637
3 -1.096672       NaN -1.022012
4  0.771515       NaN       NaN
5  0.092411       NaN       NaN
df.fillna(method = 'ffill',limit=2)
          0         1         2
0  0.196809 -0.964836  1.642764
1 -0.331314  0.386139 -0.151829
2  1.686662  0.386139  1.083637
3 -1.096672  0.386139 -1.022012
4  0.771515       NaN -1.022012
5  0.092411       NaN -1.022012
data = pd.Series([1.,NA,3.5,NA,7])
data.fillna(data.mean())
0    1.000000
1    3.833333
2    3.500000
3    3.833333
4    7.000000
dtype: float64
data
0    1.0
1    NaN
2    3.5
3    NaN
4    7.0
dtype: float64
data.fillna(data.mean())
0    1.000000
1    3.833333
2    3.500000
3    3.833333
4    7.000000
dtype: float64
__ = data.fillna(data.mean())
__
0    1.000000
1    3.833333
2    3.500000
3    3.833333
4    7.000000
dtype: float64
data = pd.DataFrame({'k1':['one','two']*3 + ['two'],
                     'k2':[1,1,2,3,3,4,4]})
data
    k1  k2
0  one   1
1  two   1
2  one   2
3  two   3
4  one   3
5  two   4
6  two   4
data.duplicated()
0    False
1    False
2    False
3    False
4    False
5    False
6     True
dtype: bool
data.drop_duplicates()
    k1  k2
0  one   1
1  two   1
2  one   2
3  two   3
4  one   3
5  two   4
data = pd.DataFrame({'food': ['bacon', 'pulled pork', 'bacon',
   ....:                               'Pastrami', 'corned beef', 'Bacon',
   ....:                               'pastrami', 'honey ham', 'nova lox'],
   ....:                      'ounces': [4, 3, 12, 6, 7.5, 8, 3, 5, 6]})
  File "<input>", line 2
    ....:                               'Pastrami', 'corned beef', 'Bacon',
        ^
SyntaxError: invalid syntax
data = pd.DataFrame({'food': ['bacon', 'pulled pork', 'bacon',
                                  'Pastrami', 'corned beef', 'Bacon',
                                  'pastrami', 'honey ham', 'nova lox'],
                         'ounces': [4, 3, 12, 6, 7.5, 8, 3, 5, 6]})
data
          food  ounces
0        bacon     4.0
1  pulled pork     3.0
2        bacon    12.0
3     Pastrami     6.0
4  corned beef     7.5
5        Bacon     8.0
6     pastrami     3.0
7    honey ham     5.0
8     nova lox     6.0
meat_to_animal = {
  'bacon': 'pig',
  'pulled pork': 'pig',
  'pastrami': 'cow',
  'corned beef': 'cow',
  'honey ham': 'pig',
  'nova lox': 'salmon'
}
lowercased = data['food'].strlower()
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 5067, in __getattr__
    return object.__getattribute__(self, name)
AttributeError: 'Series' object has no attribute 'strlower'
lowercased = data['food'].str.lower()
lowercased
0          bacon
1    pulled pork
2          bacon
3       pastrami
4    corned beef
5          bacon
6       pastrami
7      honey ham
8       nova lox
Name: food, dtype: object
data['animal'] = lowercased.map(,eat_to_animal)
  File "<input>", line 1
    data['animal'] = lowercased.map(,eat_to_animal)
                                    ^
SyntaxError: invalid syntax
data['animal'] = lowercased.map(eat_to_animal)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'eat_to_animal' is not defined
data['animal'] = lowercased.map(eat_to_animal)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'eat_to_animal' is not defined
meat_to_animal = {
  'bacon': 'pig',
  'pulled pork': 'pig',
  'pastrami': 'cow',
  'corned beef': 'cow',
  'honey ham': 'pig',
  'nova lox': 'salmon'
}
data['animal'] = lowercased.map(meat_to_animal)
data
          food  ounces  animal
0        bacon     4.0     pig
1  pulled pork     3.0     pig
2        bacon    12.0     pig
3     Pastrami     6.0     cow
4  corned beef     7.5     cow
5        Bacon     8.0     pig
6     pastrami     3.0     cow
7    honey ham     5.0     pig
8     nova lox     6.0  salmon
data['food'].map(lambda x:meat_to_animal[x.lower()])
0       pig
1       pig
2       pig
3       cow
4       cow
5       pig
6       cow
7       pig
8    salmon
Name: food, dtype: object
data = pd.Series([1.,-999.,2.,-999.,-1000.,3.])
data
0       1.0
1    -999.0
2       2.0
3    -999.0
4   -1000.0
5       3.0
dtype: float64
data.replace(-999,np.nan)
0       1.0
1       NaN
2       2.0
3       NaN
4   -1000.0
5       3.0
dtype: float64
data.replace([-999,-1000],np.nan)
0    1.0
1    NaN
2    2.0
3    NaN
4    NaN
5    3.0
dtype: float64
data
0       1.0
1    -999.0
2       2.0
3    -999.0
4   -1000.0
5       3.0
dtype: float64

import numpy as np
import pandas as pd
data = pd.DataFrame(np.arange(12).reshape((3,4)),
                    inde = ['Ohio','Colorado','New York'],
                    columns = ['one','two','three','four'])
Traceback (most recent call last):
  File "<input>", line 3, in <module>
TypeError: __init__() got an unexpected keyword argument 'inde'
from numpy import nan as NA
data = pd.DataFrame(np.arange(12).reshape((3,4)),
                    index = ['Ohio','Colorado','New York'],
                    columns = ['one','two','three','four'])
data
          one  two  three  four
Ohio        0    1      2     3
Colorado    4    5      6     7
New York    8    9     10    11
transform = lambda x:x[:4].upper()
transform
<function <lambda> at 0x000000000A8D4A60>
data.index.map(transform)
Index(['OHIO', 'COLO', 'NEW '], dtype='object')
data
          one  two  three  four
Ohio        0    1      2     3
Colorado    4    5      6     7
New York    8    9     10    11
data.index
Index(['Ohio', 'Colorado', 'New York'], dtype='object')
data
          one  two  three  four
Ohio        0    1      2     3
Colorado    4    5      6     7
New York    8    9     10    11
data.index
Index(['Ohio', 'Colorado', 'New York'], dtype='object')
data.index = data.index.map(transform)
data
      one  two  three  four
OHIO    0    1      2     3
COLO    4    5      6     7
NEW     8    9     10    11
tansform
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'tansform' is not defined
transform
<function <lambda> at 0x000000000A8D4A60>
transform.index
Traceback (most recent call last):
  File "<input>", line 1, in <module>
AttributeError: 'function' object has no attribute 'index'
data.rename(index = str.title,olumns = str.upper)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\util\_decorators.py", line 197, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\frame.py", line 4025, in rename
    return super(DataFrame, self).rename(**kwargs)
  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python37\lib\site-packages\pandas\core\generic.py", line 1072, in rename
    'argument "{0}"'.format(list(kwargs.keys())[0]))
TypeError: rename() got an unexpected keyword argument "olumns"
data.rename(index = str.title,columns = str.upper)
      ONE  TWO  THREE  FOUR
Ohio    0    1      2     3
Colo    4    5      6     7
New     8    9     10    11
data.rename(index={'OHIO':'INDIANA',inplace = True})
  File "<input>", line 1
    data.rename(index={'OHIO':'INDIANA',inplace = True})
                                                ^
SyntaxError: invalid syntax
data.rename(index={'OHIO':'INDIANA'},inplace = True)
data
         one  two  three  four
INDIANA    0    1      2     3
COLO       4    5      6     7
NEW        8    9     10    11

data.rename(index={'OHIO':'INDIANA'},inplace = True)
data
         one  two  three  four
INDIANA    0    1      2     3
COLO       4    5      6     7
NEW        8    9     10    11
##离散化和面元划分
ages = [20,22,25,27,21,23,37,31,61,45,41,32]
ages
[20, 22, 25, 27, 21, 23, 37, 31, 61, 45, 41, 32]
bins = [18,25,35,60,100]
cats = pd.cut(ages,bins)
csts
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'csts' is not defined
cats
[(18, 25], (18, 25], (18, 25], (25, 35], (18, 25], ..., (25, 35], (60, 100], (35, 60], (35, 60], (25, 35]]
Length: 12
Categories (4, interval[int64]): [(18, 25] < (25, 35] < (35, 60] < (60, 100]]
cats.codes
array([0, 0, 0, 1, 0, 0, 2, 1, 3, 2, 2, 1], dtype=int8)
cats.categories
IntervalIndex([(18, 25], (25, 35], (35, 60], (60, 100]],
              closed='right',
              dtype='interval[int64]')
pd.value_counts(cats)
(18, 25]     5
(35, 60]     3
(25, 35]     3
(60, 100]    1
dtype: int64
pd.cut(ages,[18,26,36,61,100],right=False)
[[18, 26), [18, 26), [18, 26), [26, 36), [18, 26), ..., [26, 36), [61, 100), [36, 61), [36, 61), [26, 36)]
Length: 12
Categories (4, interval[int64]): [[18, 26) < [26, 36) < [36, 61) < [61, 100)]
